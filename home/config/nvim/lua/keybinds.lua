-- map leader to <Space>
vim.keymap.set('n', ' ', '<Nop>', { silent = true, remap = false })
vim.g.mapleader = ' '

require('which-key').add({
	{ "<leader>a", "<cmd>AerialToggle!<CR>", desc = "Aerial" },
	{ "<leader>n", "<cmd>Neotree toggle<CR>", desc = "Neotree" },
	{ "<leader>d", group = "diagnostics" },
	{ "<leader>dD", "<cmd>Trouble diagnostics toggle filter.buf=0<cr>", desc = "Buffer Diagnostics (Trouble)" },
	{ "<leader>dL", "<cmd>Trouble loclist toggle<cr>", desc = "Location List (Trouble)" },
	{ "<leader>dQ", "<cmd>Trouble qflist toggle<cr>", desc = "Quickfix List (Trouble)" },
	{ "<leader>dd", "<cmd>Trouble diagnostics toggle<cr>", desc = "Diagnostics (Trouble)" },
	{ "<leader>dl", "<cmd>Trouble lsp toggle focus=false win.position=right<cr>", desc = "LSP Definitions / references / ... (Trouble)" },
	{ "<leader>ds", "<cmd>Trouble symbols toggle focus=false<cr>", desc = "Symbols (Trouble)" },
	{ "<leader>l", group = "latex" },
	{ "<leader>lC", "<cmd>VimtexCompileSS<CR>", desc = "Compile single shot (Vimtex)" },
	{ "<leader>lI", "<cmd>VimtexStatus<CR>", desc = "Status (Vimtex)" },
	{ "<leader>lO", "<cmd>VimtexCompileSelected<CR>", desc = "Compile selected (Vimtex)" },
	{ "<leader>lP", "<cmd>lua require('nabla').toggle_virt({autogen = true})<CR>", desc = "Toggle inline expressions (Nabla)" },
	{ "<leader>lS", "<cmd>VimtexStopAll<CR>", desc = "Stop all (Vimtex)" },
	{ "<leader>lc", "<cmd>VimtexCompile<CR>", desc = "Compile document (Vimtex)" },
	{ "<leader>li", "<cmd>VimtexInfo<CR>", desc = "Info (Vimtex)" },
	{ "<leader>ll", "<cmd>VimtexLog<CR>", desc = "Log (Vimtex)" },
	{ "<A-h>", "<cmd>SmartResizeLeft<CR>", desc = "Resize split left" },
	{ "<A-j>", "<cmd>SmartResizeDown<CR>", desc = "Resize split down" },
	{ "<A-k>", "<cmd>SmartResizeUp<CR>", desc = "Resize split up" },
	{ "<A-l>", "<cmd>SmartResizeRight<CR>", desc = "Resize split right" },
	{ "<C-h>", "<cmd>SmartCursorMoveLeft<CR>", desc = "Cursor move left" },
	{ "<C-j>", "<cmd>SmartCursorMoveUp<CR>", desc = "Cursor move up" },
	{ "<C-k>", "<cmd>SmartCursorMoveDown<CR>", desc = "Cursor move down" },
	{ "<C-l>", "<cmd>SmartCursorMoveRight<CR>", desc = "Cursor move right" },
	{ "<C-LeftMouse>", "<cmd>MultipleCursorsMouseAddDelete<CR>", desc = "Multicursors add-delete at mouse click", mode = { "n", "x" } },
	{ "<C-down>", "<cmd>MultipleCursorsAddDown<CR>", desc = "Multicursors add down", mode = { "i", "n", "x" } },
	{ "<C-up>", "<cmd>MultipleCursorsAddUp<CR>", desc = "Multicursors add up", mode = { "i", "n", "x" } },
	{ "<Leader>|", function() require("multiple-cursors").align() end, desc="Multicursors align" },
	{ "<leader>t", "<cmd>ToggleTerm<CR>", desc="Toggle the terminal" },
})
