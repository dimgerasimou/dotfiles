PREFIX      := $(HOME)/.local/bin/dwmblocks
CC          := cc
CFLAGS      := -Wall -Wextra -Werror -Wno-deprecated-declarations -Os -MMD -MP
PKG_FLAGS   := $(shell pkg-config --cflags --libs libnotify libpulse dbus-1)
COMMON_LDFLAGS := -lm -lX11 -lxkbfile $(PKG_FLAGS)

SRC_DIR     := src
BUILD_DIR   := build
BIN_DIR     := bin
INCLUDE     := include

COMMON_SRC  := $(SRC_DIR)/common.c
COMMON_OBJ  := $(BUILD_DIR)/common.o

BLOCKS      := time bluetooth-menu keyboard battery date kernel bluetooth internet memory power volume
BLOCK_SRCS  := $(addprefix $(SRC_DIR)/, $(addsuffix .c, $(BLOCKS)))
BLOCK_OBJS  := $(addprefix $(BUILD_DIR)/, $(addsuffix .o, $(BLOCKS)))
DEPS        := $(BLOCK_OBJS:.o=.d) $(COMMON_OBJ:.o=.d)

BINARIES    := $(addprefix $(BIN_DIR)/, $(BLOCKS))
INSTALL_TO  := $(addprefix $(PREFIX)/, $(BLOCKS))

.PHONY: all clean install uninstall

all: $(BINARIES)

# Main link rule, dispatches to helper with block-specific flags
$(BIN_DIR)/%: $(BUILD_DIR)/%.o $(COMMON_OBJ) $(INCLUDE)/colorscheme.h
	@mkdir -p $(BIN_DIR)
	@echo "Linking $@"
	$(CC) -o $@ $^ $(CFLAGS) $(call block_ldflags,$(@F))

# Build .o files from source
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c $(INCLUDE)/colorscheme.h
	@mkdir -p $(BUILD_DIR)
	@echo "Compiling $<"
#	@$(CC) -c $< -o $@ $(CFLAGS) $(call block_ldflags,$(@F)) $(call block_cflags,$(@F:.o=))
	$(CC) -c $< -o $@ $(CFLAGS) $(call block_ldflags,$(@F))

# Compile shared common.o
$(COMMON_OBJ): $(COMMON_SRC)
	@mkdir -p $(BUILD_DIR)
	@echo "Compiling common.c"
	$(CC) -c $< -o $@ $(CFLAGS) $(call block_ldflags,$(@F))

# Generate colorscheme.h
$(INCLUDE)/colorscheme.h: $(SRC_DIR)/loadresources.c
	@echo "Generating colorscheme.h..."
	@$(CC) -o loadresources $< $(CFLAGS) -lX11
	@./loadresources
	@rm -f loadresources

# Per-block CFLAGS
#define block_cflags
#$(if $(filter $1,internet),-DINTERNET_NM,)
# Add more custom per-block CFLAGS here
#endef

# Per-block LDFLAGS
define block_ldflags
$(COMMON_LDFLAGS) \
$(if $(filter $1,internet), $(shell pkg-config --cflags --libs libnm),)
endef

clean:
	@echo "Cleaning up..."
	@rm -rf $(BUILD_DIR) $(BIN_DIR) $(INCLUDE)/colorscheme.h loadresources

install: all
	@echo "Installing blocks to $(PREFIX)"
	@mkdir -p $(PREFIX)
	@cp $(BINARIES) $(PREFIX)/

uninstall:
	@echo "Removing installed blocks from $(PREFIX)"
	@rm -f $(INSTALL_TO)

-include $(DEPS)
